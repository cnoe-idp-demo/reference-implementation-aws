apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Create and Deploy Agent on AgentCore
  name: agentcore-agent
  title: Deploy AgentCore Agent
  tags:
    - python
    - agentcore
    - bedrock
spec:
  owner: user:guest
  type: agent
  parameters:
    - title: Agent Info
      required:
        - agentName
      properties:
        agentName:
          title: Agent Name
          type: string
          default: strandsdemo01
          pattern: ^[a-z\d]{1,64}$
          description: Provide Agent Name
        agentSDK:
          title: AgentSDK
          type: string
          default: strands
          enum:
            - strands
            - lang-graph

  steps:
    - id: create-agent-repo
      name: Create Agent Repository
      action: github:repo:create
      input:
        repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}
        description: This is a sample agent
        repoVisibility: public

    - id: create-deploy-repo
      name: Create Deploy Repository
      action: github:repo:create
      input:
        repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}-deploy
        description: This is a sample agent deployment
        repoVisibility: public

    - id: deploy-template
      name: Generating application deployment template
      action: fetch:template
      input:
        url: ./deploy
        targetPath: ./agent-deploy
        values:
          name: ${{parameters.agentName}}
          repoUrl: ${{ steps['create-agent-repo'].output.remoteUrl }}

    - id: agent-template
      name: Generating agent code template
      action: fetch:template
      input:
        url: ./strands
        targetPath: ./agent
        values:
          name: ${{parameters.agentName}}
          repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}

    - id: provisioner-template
      name: Generating agent code template
      action: fetch:template
      input:
        url: ./provisioner
        targetPath: ./provisioner
        values:
          name: ${{parameters.agentName}}
          repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}

    - id: publish-2-app-repo
      name: Publish to agent repo
      action: github:repo:push
      input:
        description: This is a sample agent
        sourcePath: ./agent
        repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}
        defaultBranch: main

    - id: publish-2-deploy-repo
      name: Publish to agent deploy repo
      action: github:repo:push
      input:
        description: This is a sample agent deployment
        sourcePath: ./agent-deploy
        repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}-deploy
        defaultBranch: main

    - id: wait
      name: Waiting for the repos to be ready
      action: "roadiehq:utils:sleep"
      input:
        amount: 5

    - id: create-provisioner-workflow
      name: Create Provisioner Workflow
      action: cnoe:kubernetes:apply
      input:
        namespaced: true
        manifestPath: ./provisioner/workflow.yaml
        clusterName: local
        values:
          name: ${{parameters.agentName}}
          repoUrl: github.com?owner=cnoe-idp-demo&repo=${{parameters.agentName}}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish-2-app-repo'].output.repoContentsUrl }}
        catalogInfoPath: "catalog-info.yaml"

  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
